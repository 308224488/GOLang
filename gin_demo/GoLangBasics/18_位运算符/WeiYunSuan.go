package main

import "fmt"

func main()  {
  /* &    	按位与运算符”&”是双目运算符。都是1结果为1，否则是0    (A&B)结果为12,二进制为00001100
	       (A&B)结果为12,二进制为00001100
	|      按位或运算符”“是双目运算符。都是0结果为0，否是是1
	       (A|B)结果为61,二进制为00111101
	 ^      按位异或运算符”^”是双目运算符。不同则为1，相同为0
	       (AAB)结果为49,二进制为0011 0001
	&^      位清空，a &^b，对于b上的每个数值，如果为0，则取a对应位上的数值，如果为1，则取0.
           (A &AB)结果为48进制为 00110000
	<<      左移运算符”<<”是双目运算符。左移n位就是乘以2的n次方。其功能把”<<”左边的运算数的各二进位全部左移若干位，由"<<”右边的数指定移动的位数，高位丢弃，低位补0。
           A<<2结果为240二进制为11110000
	>>      右移运算符”>>”是双目运算符。右移n位就是除以2的n次方。其功能是把”>>”左边的运算数的各二进位全部右移若千位，">>"右边的数指定移动的位数。
           A>>2骇癌奥结果为15，二进制为 0000 1111
	*/
	/*
	1  0
	2  10
	3  11
	4  100
	5  101
	6  110
	7  111
	8  1000
	9  1001
	10 1010
	*/
	var  a uint =63
	var  b uint = 13
	var  c uint =0
	c=a&b
	fmt.Printf("%d,二进制:%b\n",c,c)
	c=a|b
	fmt.Printf("%d,二进制:%b",c,c)
}